{
	//
	//	This configuration stands up a simple receiver node. It receives messages on the HTTP API and logs them.
	//

	"services":
	[
		//
		//	metrics catalog and reporter
		//
		{
			"name": "metrics",
			"class": "io.continual.metrics.DropWizardMetricsService"
		},
		{
			"name": "jmxMetricsCollector",
			"class": "io.continual.metrics.JmxMetricsCollector"
		},
		{
			"name": "metricsReporter",
			"class": "io.continual.metrics.reporters.LoggingReporter",
			"metrics": "metrics"
		},

		//
		// accounts
		//
		{
			"name":"accounts",

			"class": "io.continual.iam.impl.file.IamFileDbServiceManager",
			"file": "${ACCOUNTS_FILE|./etc/accounts.db}",
		},

		// basic http presence
		{
			"name":"httpService",
			"class":"io.continual.http.service.framework.TomcatHttpService",

			"accountService": "accounts",
			"metricsService": "metrics",

			"port":8080
		},

		//
		//	logging publisher
		//
		{
			"name": "loggingPublisher",
			"class": "io.continual.messaging.impl.LoggerPublisher",
		},

		//
		//	Kafka publisher
		//
		{
			"name": "kafkaPublisher",
			"class": "io.continual.services.messaging.impl.kafka.KafkaPublisher",
			"enabled": false,

			"kafka":
			{
				"bootstrap.servers": "${KAFKA_SERVERS}"
			}
		},

		// the receiver API
		{
			"name":"receiverApi",
			"classname":"io.continual.services.rcvr.ReceiverApiService",

			// the http service to present on
			"httpService":"httpService",

			// the accounts service
			"accounts": "accounts",

			// the publishing service
			"publisherService": "loggingPublisher"
		}
	],

	"profiles":
	{
		"kafka":
		{
			"loggingPublisher":
			{
				"enabled": false
			},
			"kafkaPublisher":
			{
				"enabled": true
			},
			"receiverApi":
			{
				"publisherService": "kafkaPublisher"
			}
		}
	}
}
