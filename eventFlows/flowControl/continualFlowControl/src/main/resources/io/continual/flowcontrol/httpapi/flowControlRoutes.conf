package io.continual.flowcontrol.httpapi

#######################################################################################################################

#
#	Get the jobs known to this service, filtered to the user's visibility.
#
GET		/jobs			FlowControlRoutes.getJobs

#
#	Get details on a particular job from this service.
#
GET		/jobs/{id}		FlowControlRoutes.getJob

#
#	Overwrite a job with a given ID. You can prevent overwriting an existing job (to execcute
# 	a create operation) by setting header "If-None-Match: *".  If the job already exists, the
# 	operation will fail with a 412 Precondition Failed.
#
#	Secrets are references to externally provided secrets (if they exist). Alternatively
#	they're managed separately as key/values.
#
#	{
#		"runtime": { "name": <container name>, "version": <container version> },
#		"config": { "type": "application/json", "data": <whatever> },
#		"secrets": { "key":"value", "key2":"value2" }
#	}
#
PUT		/jobs/{id}		FlowControlRoutes.writeJob

#
#	Update a job. The runtime and config objects are overwritten if provided. The secrets object is updated.
#
#	{ <same as create, using top level objects> }
#
PATCH	/jobs/{id}		FlowControlRoutes.patchJob

#
#	Add (or update) a secret.
#
#	{ "value": <a JSON value> }
#
PUT		/jobs/{id}/secrets/{secretId}		FlowControlRoutes.putSecret

#
#	Remove a secret
#
DELETE	/jobs/{id}/secrets/{secretId}		FlowControlRoutes.deleteSecret

#
#	delete a job
#
DELETE	/jobs/{id}		FlowControlRoutes.deleteJob

#######################################################################################################################

#
#	Deployments
#
#	{
#		job: <name>
#		instanceCount: <count, default: 1>
#		env: { <key/value pairs> }
#	}
#
POST	/deploys	FlowControlRoutes.createDeployment

#
#	Get deployments owned by the current user.
#
#	Limit to a specific job:  job=<name>
#
GET		/deploys	FlowControlRoutes.getDeployments

#
#	Get a specific deployment by ID
#
GET		/deploys/{deployId}		FlowControlRoutes.getDeployment

#
#	Get the log from a deployment worker instance
#
GET		/deploys/{deployId}/log/{instanceId}	FlowControlRoutes.getLogs

#
#	tear down a deployment
#
DELETE	/deploys/{deployId}		FlowControlRoutes.undeploy
