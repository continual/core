{
	"services":
	[
		// Metrics service
		{
			"name": "metrics",
			"class": "io.continual.metrics.DropWizardMetricsService"
		},

		//
		//	Account service
		//
		{
			"name": "accounts",
			"class": "io.continual.iam.impl.file.IamFileDbServiceManager",
			"file": "./etc/userdb"
		},

		//
		//	encryption service
		//
		{
			"name": "encryptor",
			"class": "io.continual.flowcontrol.impl.common.Enc",
			"key": "${FLOWCONTROL_ENCKEY}"
		},

		//
		//	model service
		//
		{
			"name": "db",
			"class": "io.continual.services.model.impl.files.FileSystemModel",
			"acctId": "none",
			"modelId": "jobDb",
			"baseDir": "${TESTDBDIR|/tmp}/flowControlDb"
		},

		//
		//	job db layered over the model
		//
		{
			"name": "jobDb",
			"class": "io.continual.flowcontrol.impl.jobdb.model.ModelJobDb",
			"model": "db"
		},

		//
		//	deployment db layered over the model
		//
		{
			"name": "deployDb",
			"class": "io.continual.flowcontrol.impl.deploydb.model.ModelDeployDb",
			"model": "db"
		},

		//
		//	controller
		//
		{
			"name": "controller",
			"class": "io.continual.flowcontrol.impl.controller.k8s.K8sController",

			"installationName": "${INSTALLATION_NAME|testInstallationName}",

			"imageMapper":
			{
				"class": "io.continual.flowcontrol.impl.controller.k8s.impl.InlineImageMapper",
				"rules": [
					{ "match": ".*", "image": "${FLOWCONTROL_CONTAINER_REGISTRY|docker.io/library}/continualeventproc:0.3.21-SNAPSHOT" }
				]
			},

			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			//
			//	internal config URL for runtime pods
			//
			"internalConfigUrl": "${FLOWCONTROL_CONFIG_BASE_URL}",

			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			//
			//	Connecting to Kubernetes
			//

			// setting useKubeConfig to true, or explicitly setting the name of the config file
			// as kubeConfig will have the controller use the appropriate kube config.
			"useKubeConfig": true,
			//"kubeConfig": "${HOME}/.kube/config",

			// if using kube config, which context?
			"kubeConfigContext": "${FLOWCONTROL_KUBE_CONFIG_CONTEXT|minikube}",

			// the namespace assigned to flowcontrol
			"namespace": "${FLOWCONTROL_NAMESPACE|flowcontrol}",

			///////////////////////////////////////////////////////////////////////////////////////////////////////////

			"deploymentDb": "deployDb",
			"signingKey": "${FLOWCONTROL_SIGNING_KEY}",

			// k8s deployment elements
			"elements":
			[
				{ "class": "SecretDeployer" },
				{ "class": "ConfigPullScriptDeployer", "scriptResource": "configPullScript.sh" },
				{
					"class": "StatefulSetDeployer",

					//
					//	additional environment vars in the pods
					//
					"applyEnv":
					{
						"FC_TEST": "123"
					}
				}
			]
		},

		//
		//	An HTTP server for API network presence
		//
		{
			"name": "HttpService",
			"class":"io.continual.http.service.framework.TomcatHttpService",
			"port": "${FLOWCONTROL_SERVICE_PORT|8080}"
		},

		//
		//	Flow Control API
		//
		{
			"name": "flowcontrol",
			"class": "io.continual.flowcontrol.httpapi.BaseHttpService",
			"namespace": "api-test-namespace",

			"accounts": "accounts",
			"httpService": "HttpService",

			"jobDb": "jobDb",
			"deployApi": "controller",
			"runtimeSystemApi": "controller"
		}
	],

	"profiles":
	{
	}
}
