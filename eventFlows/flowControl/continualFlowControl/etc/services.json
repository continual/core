{
	"services":
	[
		// Metrics service
		{
			"name": "metrics",
			"class": "io.continual.metrics.DropWizardMetricsService"
		},

		//
		//	Account service
		//
		{
			"name": "accounts",
			"class": "io.continual.iam.impl.file.IamFileDbServiceManager",
			"file": "./etc/userdb"
		},

		//
		//	encryption service
		//
		{
			"name": "encryptor",
			"class": "io.continual.flowcontrol.impl.enc.Enc",
			"key": "fuga.key.123"
		},

		//
		//	model service
		//
		{
			"name": "db",
			"class": "io.continual.services.model.impl.files.FileSystemModel",
			"acctId": "none",
			"modelId": "jobDb",
			"baseDir": "${TESTDBDIR|/tmp}/flowControlDb"
		},

		//
		//	job db
		//
		{
			"name": "jobDb",
			"class": "io.continual.flowcontrol.impl.jobdb.model.ModelJobDb",
			"model": "db"
		},

		//
		//	deployment db
		//
		{
			"name": "deployDb",
			"class": "io.continual.flowcontrol.impl.deploydb.model.ModelBackedDeployDb",
			"model": "db"
		},

		//
		//	template engine
		//
		{
			"name": "goTemplateEngine",
			"class": "io.continual.templating.impl.golang.GoTemplateEngine"
		},

		//
		//	controller
		//
		{
			"name": "controller",
			"class": "io.continual.flowcontrol.impl.controller.k8s.K8sController",
			"dumpInitYaml": true,	// debugging

			"installationName": "${INSTALLATION_NAME|testInstallationName}",

			"context": "minikube",
			"storageClass": "standard",

//			"context": "do-nyc3-rr-k8s-do-nyc3",
//			"storageClass": "do-block-storage",

			"templateEngine": "goTemplateEngine",

			"namespace": "flowcontrol",

			"deploymentDb": "deployDb",
			"signingKey": "fuga.key.456"
		},

		//
		//	An HTTP server for API network presence
		//
		{
			"name": "HttpService",
			"class":"io.continual.http.service.framework.TomcatHttpService",
			"port": "8080"
		},

		//
		//	Flow Control API
		//
		{
			"name": "flowcontrol",
			"class": "io.continual.flowcontrol.services.httpapi.BaseHttpService",
			"namespace": "api-test-namespace",

			"accounts": "accounts",
			"httpService": "HttpService",
			"jobDb": "jobDb",
			"deployApi": "controller",
			"configTransfer": "configTransfer"
		}
	],

	"profiles":
	{
	}
}
